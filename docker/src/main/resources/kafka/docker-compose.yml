version: "3.7"

services:

  depositary:
    image: depositary
    container_name: depositary
    networks:
      - back-tier

  confluent-schema-registry:
    image: confluentinc/cp-schema-registry
    network_mode: host
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: localhost:2181
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:18081
      # please replace this setting by the IP of your web tools server
      SCHEMA_REGISTRY_HOST_NAME: "127.0.0.1"

  confluent-rest-proxy:
    image: confluentinc/cp-kafka-rest
    network_mode: host
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: localhost:19093
      KAFKA_REST_ZOOKEEPER_CONNECT: localhost:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:18082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://localhost:18081/
      # please replace this setting by the IP of your web tools server
      KAFKA_REST_HOST_NAME: "127.0.0.1"
#    depends_on:
#      - confluent-schema-registry

  kafka_ui:
    image: landoop/kafka-topics-ui
    container_name: kafka_ui
    network_mode: host
    environment:
      KAFKA_REST_PROXY_URL: http://localhost:18082
      PROXY: "TRUE"
    depends_on:
      - confluent-rest-proxy

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - back-tier

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "19092:19092"
      - "19093:19093"
    environment:
#      KAFKA_ADVERTISED_HOST_NAME: kafka
#      https://github.com/apache/kafka/blob/trunk/config/log4j.properties
#      LOG4J_LOGGER_ORG_APACHE_KAFKA: DEBUG
#      LOG4J_LOGGER_KAFKA: DEBUG
#      LOG4J_LOGGER_KAFKA_REQUEST_LOGGER: DEBUG
#      LOG4J_ROOTLOGGER: DEBUG
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:19092,PLAINTEXT://:19093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:19092,PLAINTEXT://localhost:19093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS:
        #topic name : number of partitions : number of replicas.
        "executions:1:1,deposits:1:1"
    networks:
      - back-tier
    depends_on:
      - zookeeper

#  kafka_slave:
#    image: wurstmeister/kafka
#    container_name: kafka_slave
#    ports:
#      - "19093:19093"
#    environment:
#      KAFKA_BROKER_ID: 2
#      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:19093
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka_slave:9092,OUTSIDE://localhost:19093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CREATE_TOPICS:
#        "executions:1:1,deposits:1:1"
#    networks:
#      - back-tier
#    depends_on:
#      - zookeeper

networks:
  back-tier: